package com.github.valentina810.checkbrackets.service.parameters;

import org.junit.jupiter.params.provider.Arguments;

import java.util.stream.Stream;

public class CheckBracketsServiceImplTestProvider {
    /**
     * Проверка возврата true при корректных скобках
     */
    static Stream<Arguments> checkText_whenValidBrackets_thenReturnTrue() {
        return Stream.of(
                Arguments.of("Привет (мир)"),
                Arguments.of("Текст из нескольких слов [несколько слов]"),
                Arguments.of("Разные {[(скобки)]}"),
                Arguments.of("Текст ( текст в скобках ) с пробелами"),
                Arguments.of("Тоже текст (в (скобках) с пробелами)"),
                Arguments.of("Несколько повторений {скобки (с)} текстом, (и еще одни[сноска])"),
                Arguments.of("Вчера я отправился в поход в лес (это мое любимое место для отдыха) вместе с друзьями. Мы выбрали маршрут, который проходил через горные потоки и поля (для разнообразия). В начале пути погода была отличной, солнце светило ярко, и птицы радостно пели. Однако, когда мы подошли ближе к вершине горы, небо стало покрываться облаками, (как будто природа готовила нам небольшой сюрприз). Несмотря на это, виды были захватывающими, особенно когда мы достигли высшей точки и увидели прекрасный вид на долину (я почувствовал, что все усилия стоили того).")
        );
    }

    /**
     * Проверка возврата true в случае текста без скобок
     */
    static Stream<Arguments> checkText_whenTextWithoutBrackets_thenReturnTrue() {
        return Stream.of(
                Arguments.of(""),
                Arguments.of("Нет скобок"),
                Arguments.of("Вчера я отправился в поход в лес это мое любимое место для отдыха вместе с друзьями. Мы выбрали маршрут, который проходил через горные потоки и поля для разнообразия. В начале пути погода была отличной, солнце светило ярко, и птицы радостно пели. Однако, когда мы подошли ближе к вершине горы, небо стало покрываться облаками, как будто природа готовила нам небольшой сюрприз. Несмотря на это, виды были захватывающими, особенно когда мы достигли высшей точки и увидели прекрасный вид на долину я почувствовал, что все усилия стоили того.")
        );
    }

    /**
     * Проверка возврата false в случае текста c некорректными скобками
     */
    static Stream<Arguments> checkText_whenInvalidBrackets_thenReturnFalse() {
        return Stream.of(
                Arguments.of("Не закрытая ] скобка"),
                Arguments.of("Закрытая ( но } не совпадающая скобка"),
                Arguments.of("Закрытая ( скобка без пары"),
                Arguments.of("Открытая ) скобка без пары"),
                Arguments.of("Скобка ( не закрытая ) но ) есть парные скобки "),
                Arguments.of("Скобка [ не ] закрытая ] но есть парные скобки"),
                Arguments.of("Скобки [ парные ] но нарушен порядок ] этих [ скобок"),
                Arguments.of("Скобки [ парные { но нарушен (порядок ) этих ] скобок}")
        );
    }

    /**
     * Проверка возврата false в случае текста c пустыми скобками
     */
    static Stream<Arguments> checkText_whenEmptyTextInBrackets_thenReturnFalse() {
        return Stream.of(
                Arguments.of("Пустые () скобки"),
                Arguments.of("(    )"),
                Arguments.of("Пустые скобки (      ) с пробелами"),
                Arguments.of("Непустые [(скобки)] и пустые ()"),
                Arguments.of("Вложенные [(пустые)] скобки ([])"),
                Arguments.of("Пустые [(скобки)[] внутри скобок ]")
        );
    }
}